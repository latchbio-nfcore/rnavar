
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title='Input/output options',
        description='Path to comma-separated file containing information about the samples in the experiment.',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.',
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'multiqc_title': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='MultiQC report title. Printed as page header, used for filename if not otherwise specified.',
    ),
    'save_merged_fastq': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save FastQ files after merging re-sequenced libraries in the results directory.',
    ),
    'genome': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Reference genome options',
        description='Name of iGenomes reference.',
    ),
    'fasta': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to FASTA genome file.',
    ),
    'dict': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to FASTA dictionary file.',
    ),
    'fasta_fai': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to FASTA reference index.',
    ),
    'gtf': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to GTF annotation file.',
    ),
    'gff': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to GFF3 annotation file.',
    ),
    'exon_bed': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to BED file containing exon intervals. This will be created from the GTF file if not specified.',
    ),
    'read_length': NextflowParameter(
        type=typing.Optional[float],
        default=151,
        section_title=None,
        description='Read length',
    ),
    'save_reference': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If generated by the pipeline, save the STAR index in the results directory.',
    ),
    'known_indels': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to known indels VCF file',
    ),
    'known_indels_tbi': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to known indels index file',
    ),
    'dbsnp': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to dbSNP VCF file',
    ),
    'dbsnp_tbi': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to dbSNP VCF index file',
    ),
    'snpeff_db': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='snpEff DB version',
    ),
    'vep_genome': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='VEP genome',
    ),
    'vep_species': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='VEP species',
    ),
    'vep_cache_version': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='VEP cache version',
    ),
    'aligner': NextflowParameter(
        type=typing.Optional[str],
        default='star',
        section_title='Alignment options',
        description="Specifies the alignment algorithm to use. Currently available option is 'star'",
    ),
    'star_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to STAR index folder or compressed file (tar.gz)',
    ),
    'star_twopass': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Enable STAR 2-pass mapping mode.',
    ),
    'star_ignore_sjdbgtf': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Do not use GTF file during STAR index buidling step',
    ),
    'star_max_memory_bamsort': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Option to limit RAM when sorting BAM file. Value to be specified in bytes. If 0, will be set to the genome index size.',
    ),
    'star_bins_bamsort': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='Specifies the number of genome bins for coordinate-sorting',
    ),
    'star_max_collapsed_junc': NextflowParameter(
        type=typing.Optional[int],
        default=1000000,
        section_title=None,
        description='Specifies the maximum number of collapsed junctions',
    ),
    'seq_center': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Sequencing center information to be added to read group of BAM files.',
    ),
    'seq_platform': NextflowParameter(
        type=typing.Optional[str],
        default='illumina',
        section_title=None,
        description='Specify the sequencing platform used',
    ),
    'save_unaligned': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Where possible, save unaligned reads from aligner to the results directory.',
    ),
    'save_align_intermeds': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save the intermediate BAM files from the alignment step.',
    ),
    'bam_csi_index': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Create a CSI index for BAM files instead of the traditional BAI index. This will be required for genomes with larger chromosome sizes.',
    ),
    'remove_duplicates': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Preprocessing of alignment',
        description='Specify whether to remove duplicates from the BAM during Picard MarkDuplicates step.',
    ),
    'gatk_hc_call_conf': NextflowParameter(
        type=typing.Optional[float],
        default=20,
        section_title='Variant calling',
        description='The minimum phred-scaled confidence threshold at which variants should be called.',
    ),
    'skip_baserecalibration': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Pipeline stage options',
        description='Skip the process of base recalibration steps i.e., GATK BaseRecalibrator and GATK ApplyBQSR.',
    ),
    'skip_intervallisttools': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip the process of preparing interval lists for the GATK variant calling step',
    ),
    'skip_variantfiltration': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip variant filtering of GATK',
    ),
    'skip_variantannotation': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip variant annotation',
    ),
    'skip_multiqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip MultiQC reports',
    ),
    'gatk_interval_scatter_count': NextflowParameter(
        type=typing.Optional[int],
        default=25,
        section_title='Tool parameters',
        description='Number of times the gene interval list to be split in order to run GATK haplotype caller in parallel',
    ),
    'no_intervals': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Do not use gene interval file during variant calling',
    ),
    'gatk_vf_window_size': NextflowParameter(
        type=typing.Optional[int],
        default=35,
        section_title=None,
        description='The window size (in bases) in which to evaluate clustered SNPs.',
    ),
    'gatk_vf_cluster_size': NextflowParameter(
        type=typing.Optional[int],
        default=3,
        section_title=None,
        description='The number of SNPs which make up a cluster. Must be at least 2.',
    ),
    'gatk_vf_fs_filter': NextflowParameter(
        type=typing.Optional[float],
        default=30,
        section_title=None,
        description='Value to be used for the FisherStrand (FS) filter',
    ),
    'gatk_vf_qd_filter': NextflowParameter(
        type=typing.Optional[float],
        default=2,
        section_title=None,
        description='Value to be used for the QualByDepth (QD) filter',
    ),
}

